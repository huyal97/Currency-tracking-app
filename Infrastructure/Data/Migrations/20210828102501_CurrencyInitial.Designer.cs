// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Infrastructure.Data.Migrations
{
    [DbContext(typeof(ExchangeContext))]
    [Migration("20210828102501_CurrencyInitial")]
    partial class CurrencyInitial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Infrastructure.Entities.Currencies", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Date")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Currencies");
                });

            modelBuilder.Entity("Infrastructure.Entities.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BanknoteBuying")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BanknoteSelling")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CurrenciesId")
                        .HasColumnType("int");

                    b.Property<string>("CurrencyCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrencyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ForexBuying")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ForexSelling")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Isim")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CurrenciesId");

                    b.ToTable("Currency");
                });

            modelBuilder.Entity("Infrastructure.Entities.Currency", b =>
                {
                    b.HasOne("Infrastructure.Entities.Currencies", null)
                        .WithMany("currencyList")
                        .HasForeignKey("CurrenciesId");
                });

            modelBuilder.Entity("Infrastructure.Entities.Currencies", b =>
                {
                    b.Navigation("currencyList");
                });
#pragma warning restore 612, 618
        }
    }
}
